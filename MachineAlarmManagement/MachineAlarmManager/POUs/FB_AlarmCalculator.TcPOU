<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_AlarmCalculator" Id="{f9fb4732-2a58-4724-8e9e-37487e3bcd05}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AlarmCalculator
VAR CONSTANT
	NUM_OF_SEVERITIES: UINT  := 6;
END_VAR
VAR_INPUT
	bRefresh	: BOOL;			// make true at momentally (1 cycle) when 
END_VAR
VAR_OUTPUT
END_VAR
VAR
	al_index	: UINT := 0;
	p_alarms	: ARRAY [0..AlarmEventParam.ALARM_MAX_COUNT - 1] OF POINTER TO FB_Alarm;
	_exporter	: I_EventExporter;
	//_p_exporter	: POINTER TO FB_AlarmDBExporter;
	lang_code	: DINT := 1033;
	{attribute 'TcEncoding':='UTF-8'}
	event_text	: STRING;
	event_severities	: ARRAY [0..NUM_OF_SEVERITIES - 1] OF EventSeverityStatusMember := [
		(severity := TcEventSeverity.Critical),(severity := TcEventSeverity.Error),(severity := TcEventSeverity.Info),
		(severity := TcEventSeverity.Verbose),(severity := TcEventSeverity.Warning),(severity := TcEventSeverity.Warning)
	];
	i			: UINT;
	j			: UINT;
	
	_test_counter:  UDINT;
	bMemRefresh : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF _exporter <> 0 THEN
	_exporter.execute();
END_IF

FOR i := 0 TO al_index - 1 DO
	// clear
	IF bRefresh AND NOT bMemRefresh THEN
		FOR j := 0 TO NUM_OF_SEVERITIES - 1 DO
			IF event_severities[j].severity = p_alarms[i]^.eSeverity THEN
				event_severities[j].raised := p_alarms[i]^.bActive;
				event_severities[j].confirmed := p_alarms[i]^.bActive AND p_alarms[i]^.eConfirmationState <> TcEventConfirmationState.WaitForConfirmation;
			END_IF
		END_FOR
	END_IF
	// raised status
	IF p_alarms[i]^.event_raised THEN
		FOR j := 0 TO NUM_OF_SEVERITIES - 1 DO
			IF event_severities[j].severity = p_alarms[i]^.eSeverity THEN
				event_severities[j].raised := TRUE;		
			END_IF
		END_FOR
		// exporter
		IF _exporter <> 0 THEN
			_exporter.send_signal(p_alarms[i]);	
		END_IF
	END_IF
	// confirmed status
	IF p_alarms[i]^.event_confirmed THEN
		FOR j := 0 TO NUM_OF_SEVERITIES - 1 DO
			IF event_severities[j].severity = p_alarms[i]^.eSeverity THEN
				event_severities[j].confirmed := TRUE;		
			END_IF
		END_FOR
	END_IF

	// clear status
	IF p_alarms[i]^.event_cleared THEN
		FOR j := 0 TO NUM_OF_SEVERITIES - 1 DO
			IF event_severities[j].severity = p_alarms[i]^.eSeverity THEN
				event_severities[j].raised := FALSE;
				event_severities[j].confirmed := FALSE;
			END_IF
		END_FOR
		// exporter
		IF _exporter <> 0 THEN
			_exporter.send_signal(p_alarms[i]);
		END_IF
	END_IF
	
END_FOR
bMemRefresh := bRefresh;]]></ST>
    </Implementation>
    <Property Name="exporter" Id="{8ed77c58-6df9-432f-95d3-8678854c6442}">
      <Declaration><![CDATA[PROPERTY exporter : I_EventExporter]]></Declaration>
      <Get Name="Get" Id="{54da41b4-c931-4a3f-9a42-6be2ba6929e4}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[exporter := _exporter;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d4e4446f-c0b4-4adc-b636-349021aa1b48}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_exporter := exporter;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="is_raised" Id="{de96aac9-c9b2-4695-bd6f-841b669f2da8}">
      <Declaration><![CDATA[// TRUE if the registered events filtered by specified severity level is in Raised state.
METHOD PUBLIC is_raised : BOOL
VAR_INPUT
	severity : TcEventSeverity := TcEventSeverity.Error; // Filterd minimum serverity level
END_VAR
VAR
	i:	UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[is_raised := FALSE;
FOR i := 0 TO NUM_OF_SEVERITIES - 1 DO
	IF event_severities[i].raised AND event_severities[i].severity >= severity THEN
		is_raised := TRUE;
		RETURN;
	END_IF
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <Method Name="is_unconfirmed" Id="{154448da-2a54-4ab5-b3d4-96a70c7c1c3e}">
      <Declaration><![CDATA[// TRUE if the registered events filtered by specified severity level is in WaitForConfirmation state.
METHOD PUBLIC is_unconfirmed : BOOL
VAR_INPUT
	severity : TcEventSeverity := TcEventSeverity.Error; // Filterd minimum serverity level
END_VAR
VAR
	i:	UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[is_unconfirmed := FALSE;
FOR j := 0 TO NUM_OF_SEVERITIES - 1 DO
	IF event_severities[i].raised AND NOT event_severities[i].confirmed AND event_severities[i].severity >= severity THEN
		is_unconfirmed := TRUE;
		RETURN;
	END_IF
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <Method Name="reg_alarm" Id="{9282b111-287e-4a69-a8d7-7357a254d643}">
      <Declaration><![CDATA[METHOD INTERNAL reg_alarm : BOOL
VAR_INPUT
	p_alarm	:POINTER TO FB_Alarm;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF AlarmEventParam.ALARM_MAX_COUNT <= al_index THEN
	reg_alarm := FALSE;
	RETURN;
END_IF

p_alarms[al_index] := p_alarm;
al_index := al_index + 1;
reg_alarm := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_AlarmCalculator">
      <LineId Id="427" Count="1" />
      <LineId Id="430" Count="0" />
      <LineId Id="426" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="382" Count="1" />
      <LineId Id="386" Count="1" />
      <LineId Id="391" Count="0" />
      <LineId Id="388" Count="2" />
      <LineId Id="385" Count="0" />
      <LineId Id="268" Count="8" />
      <LineId Id="354" Count="0" />
      <LineId Id="286" Count="19" />
      <LineId Id="323" Count="1" />
      <LineId Id="316" Count="2" />
      <LineId Id="9" Count="0" />
      <LineId Id="393" Count="0" />
    </LineIds>
    <LineIds Name="FB_AlarmCalculator.exporter.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_AlarmCalculator.exporter.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_AlarmCalculator.is_raised">
      <LineId Id="63" Count="6" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_AlarmCalculator.is_unconfirmed">
      <LineId Id="47" Count="6" />
      <LineId Id="24" Count="0" />
    </LineIds>
    <LineIds Name="FB_AlarmCalculator.reg_alarm">
      <LineId Id="30" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="31" Count="0" />
      <LineId Id="28" Count="1" />
      <LineId Id="12" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>